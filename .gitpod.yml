workspaceLocation: "root"

image: "contrun/gitpod-nix"

tasks:
  - name: tailscaled
    command: |
      if [ -n "${TAILSCALE_STATE_MYPROJECT}" ]; then
        # restore the tailscale state from gitpod user's env vars
        sudo mkdir -p /var/lib/tailscale
        echo "${TAILSCALE_STATE_MYPROJECT}" | sudo tee /var/lib/tailscale/tailscaled.state > /dev/null
      fi
      sudo tailscaled
  - name: tailscale
    command: |
      if [ -n "${TAILSCALE_STATE_MYPROJECT}" ]; then
        sudo -E tailscale up
      else
        sudo -E tailscale up --hostname "gitpod-${GITPOD_GIT_USER_NAME// /-}-$(echo ${GITPOD_WORKSPACE_CONTEXT} | jq -r .repository.name)"
        # store the tailscale state into gitpod user
        gp env TAILSCALE_STATE_MYPROJECT="$(sudo cat /var/lib/tailscale/tailscaled.state)"
      fi
  - name: git
    init: |
      WORKSPACE_ROOT=/workspace/root
      CLONE_ROOT="$(jq -r .checkoutLocation <<< "$GITPOD_WORKSPACE_CONTEXT")"
      CLONE_URL="$(jq -r .repository.cloneUrl <<< "$GITPOD_WORKSPACE_CONTEXT")"
      CONTEXT_URL="${GITPOD_WORKSPACE_CONTEXT_URL%.git}.git"
      if [[ "$CLONE_URL" == "$CONTEXT_URL" ]]; then
        ln -s "$CLONE_ROOT" "$WORKSPACE_ROOT"
        exit 0
      fi
      if [[ -d "$WORKSPACE_ROOT" ]] && [[ -n "$(ls -A "$WORKSPACE_ROOT")" ]]; then
        echo "$WORKSPACE_ROOT non empty, skipping clone repository."
      else
        git clone "$GITPOD_WORKSPACE_CONTEXT_URL" "$WORKSPACE_ROOT"
      fi

vscode:
  extensions:
    - eamodio.gitlens
    - mkhl.direnv
    - bbenoist.Nix
    - jnoortheen.nix-ide
    - kamadorueda.alejandra
    - rust-lang.rust-analyzer
    - PKief.material-icon-theme
    - tamasfe.even-better-toml
    - evilz.vscode-reveal
    - vscode-org-mode.org-mode
